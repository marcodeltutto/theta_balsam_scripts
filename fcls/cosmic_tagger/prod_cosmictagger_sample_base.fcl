#include "services_sbnd.fcl"
#include "simulationservices_sbnd.fcl"
#include "messages_sbnd.fcl"
#include "rootoutput_sbnd.fcl"

#include "genie_sbnd.fcl"
#include "corsika_sbnd.fcl"

#include "largeantmodules_sbnd.fcl"
#include "mcreco.fcl"

#include "detsimmodules_sbnd.fcl"
#include "crtsimmodules_sbnd.fcl"
#include "opdetdigitizer_sbnd.fcl"

#include "caldata_sbnd.fcl"


process_name: CosmicTaggerGenNeutrino

services:
{
    TFileService: { fileName: "filename.root" }
    @table::sbnd_simulation_services
    #@table::sbnd_g4_services
    #@table::sbnd_detsim_services
    #@table::sbnd_services
}

source:
{
    module_type: EmptyEvent
    timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
    maxEvents: 10
    firstRun: 1
    firstEvent: 1
}

physics:
{

  producers:
  {
    rns:       { module_type: "RandomNumberSaver" }

    generator: @local::sbnd_genie_simple
    corsika:   @local::sbnd_corsika_p

    largeant:  @local::sbnd_largeant

    daq:       @local::sbnd_simwire

    caldata:   @local::sbnd_calwire

    mcreco:    @local::standard_mcreco

  }

  analyzers:{  }

  simulate: [
      rns
    , generator
    , corsika
    , largeant
    , daq
    , mcreco
    , caldata
  ]

  trigger_paths: [simulate]
  # analyze: [supera]
  out_stream: [out1]
  # end_paths: [analyze, out_stream]
  # end_paths: [analyze]
  end_paths: [out_stream]
}





#
# Generator
#
physics.producers.generator.BufferBox: [ -250.0, +250.0, -250.0, +250.0, -250.0, +250.0 ]
physics.producers.generator.FluxSearchPaths: "/lus/grand/projects/neutrino_osc_ADSP/files/flux/sbnd/neutrino_mode/"
physics.producers.generator.FiducialCut: "mbox: -200,-200,0,200,200,500"

#
# CORSIKA
#
physics.producers.corsika.ShowerInputFiles: [
   "/lus/grand/projects/neutrino_osc_ADSP/files/CORSIKA_files/p_showers_*.db"
]

#
# Geant4
#


services.LArG4Parameters.FillSimEnergyDeposits: true
services.LArG4Parameters.KeepEMShowerDaughters: true
services.LArG4Parameters.NoPhotonPropagation: true
services.LArG4Parameters.ParticleKineticEnergyCut: 0.0005
services.LArPropertiesService.ScintYield: 0
services.LArPropertiesService.ScintByParticleType: false

physics.producers.mcreco.SimEnergyDepositLabel: "largeant:TPCActive"
physics.producers.mcreco.SimChannelLabel: "largeant:TPCActive"
physics.producers.mcreco.MCParticleLabel: "largeant"
physics.producers.mcreco.UseSimEnergyDeposit: true
physics.producers.mcreco.MCRecoPart.SavePathPDGList: [13,-13,211,-211,111,311,310,130,321,-321,2212,2112,2224,2214,2114,1114,3122,1000010020,1000010030,1000020030,1000020040]

#
# Caldata
#

physics.producers.caldata.DigitModuleLabel: "daq"
physics.producers.caldata.ROITool.Threshold: [19, 35 , 13]
physics.producers.caldata.ROITool.uPlaneROIPad: [ 10, 10 ] # number of bins to pad both ends of the ROIs
physics.producers.caldata.ROITool.vPlaneROIPad: [ 10, 10 ] # number of bins to pad both ends of the ROIs
physics.producers.caldata.ROITool.zPlaneROIPad: [ 10, 10 ] # number of bins to pad both ends of the ROIs



outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName: "sbnd-beam-%p-%tc.art.root"
   dataTier: "reco"
   compressionLevel: 1
   # skim output (if needed)
   #outputCommands: [ "keep *",
   #                  "drop raw::RawDigit_*_*"
   #                ]

   # Only uncomment if selecting events with nu in active volume
   # SelectEvents: [simulate]
 }
}

services.message.destinations :
{
  STDCOUT:
  {
    type:      "cout"      #tells the message service to output this destination to cout
    threshold: "INFO"      #tells the message service that this destination applies to WARNING and higher level messages
    categories:
    {
      default:
      {
        limit:       1000  #don't print anything at the infomsg level except the explicitly named categories
        reportEvery: 1
      }
    }
  }
}
#include "1drift_services_sbnd.fcl"
